// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

// Admin can add Spot
model Spot {
  spotId          Int        @id @default(autoincrement())
  hallName        String
  description     String
  latitude        Decimal
  longitude       Decimal
  // TODO: See if we can find closed thing using timings only
  capacity        Int
  crowdCount      Int
  imageLink       String     @default("/images/default.png")
  // START_TIME___END_TIME####START_TIME___END_TIME...
  timings         String
  ClientCountLogs CrowdLog[]
  Meal            Meal[]
  admin           User       @relation(fields: [adminEmail], references: [email])
  adminEmail      String
}

model CrowdLog {
  spotId      Int
  spot        Spot     @relation(fields: [spotId], references: [spotId])
  timestamp   DateTime
  clientCount Int

  @@unique([spotId, timestamp])
}

model User {
  email           String @id
  name            String
  hashed_password String
  role            Role   @default(MANAGER)
  Spot            Spot[]
}

enum Role {
  MANAGER
  ADMIN
}

// any manager can add a meal and delete too
model Meal {
  mealId              Int     @id @default(autoincrement())
  spotId              Int
  spot                Spot    @relation(fields: [spotId], references: [spotId])
  title               String
  image               String
  description         String
  total_fat           Decimal
  saturated_fat       Decimal
  sodium              Decimal
  total_carbohydrate  Decimal
  total_dietary_fiber Decimal
  total_protein       Decimal
  total_carbon        Decimal
  total_water_used    Decimal
}

model session {
  sid    String   @id
  sess   Json
  expire DateTime
}
